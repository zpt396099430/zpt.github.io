{"meta":{"title":"ZPT's Blog","subtitle":"Yesterday you said tomorrow.","description":"God helps those who help themselves.","author":"ZPT","url":"http://blog.zhangpeitian.cn","root":"/"},"pages":[{"title":"","date":"2019-04-12T09:54:59.000Z","updated":"2019-04-25T09:03:14.023Z","comments":false,"path":"about/index.html","permalink":"http://blog.zhangpeitian.cn/about/index.html","excerpt":"","text":"关于我本人90后程序员一枚，现居杭州，喜好游戏。 关于本站本站始建于2019年4月12日，托管于github。仅以此站鞭策自己，坚持写作，热爱生活。"},{"title":"","date":"2019-04-12T09:54:32.000Z","updated":"2019-04-25T09:05:46.476Z","comments":false,"path":"categories/index.html","permalink":"http://blog.zhangpeitian.cn/categories/index.html","excerpt":"","text":""},{"title":"","date":"2019-04-12T09:54:26.000Z","updated":"2019-04-25T09:05:55.727Z","comments":false,"path":"tags/index.html","permalink":"http://blog.zhangpeitian.cn/tags/index.html","excerpt":"","text":""},{"title":"常用工具","date":"2019-04-29T09:21:09.000Z","updated":"2019-05-05T01:32:58.010Z","comments":true,"path":"resources/index.html","permalink":"http://blog.zhangpeitian.cn/resources/index.html","excerpt":"","text":"截图工具：Snipaste 下载地址优点 再也不用为了截图打开QQ了 不仅可以截图还可以贴图，十分方便肉眼对比，再也不用频繁的ALT+TAB 轻量级，体积小，占用少，谁用谁知道 搜索神器：Everything 下载地址优点 完爆win资源管理器自带的检索速度，甩出了不知道多少条街，几乎感受不到检索时间 一键唤出，非常方便，对于长期使用电脑工作的人是实实在在的神器 界面简洁，没有花里胡哨的玩意儿 不可描述：世界那么大我想出去看看 下载地址优点 出 国 留 学 视频压制工具：小丸工具箱 下载地址优点 一键式操作，压制效果很好，体积小画质清晰 宽：640 高：368 压制好以后发到微信中大小刚合适 待续"}],"posts":[{"title":"Google Cloud 设置root密码并开启远程SSH","slug":"Google Cloud 设置root密码并开启远程SSH","date":"2019-04-19T05:39:45.000Z","updated":"2019-06-04T11:12:30.145Z","comments":true,"path":"2019/04/19/Google Cloud 设置root密码并开启远程SSH/","link":"","permalink":"http://blog.zhangpeitian.cn/2019/04/19/Google Cloud 设置root密码并开启远程SSH/","excerpt":"设置root密码从Google Cloud控制台选择在浏览器窗口中打开ssh 切换到root账号1sudo -i","text":"设置root密码从Google Cloud控制台选择在浏览器窗口中打开ssh 切换到root账号1sudo -i 设置root密码1passwd 然后会要求输入新密码，然后再重复一次密码，输入密码的时候不会显示出来，所以直接输入密码，然后回车，再然后重复输入密码回车 开启SSH权限方法一修改SSH配置文件/etc/ssh/sshd_config1vi /etc/ssh/sshd_config 然后再输”i”进入编辑模式1i 找到以下内容并修改12PermitRootLogin yes //默认为no，需要开启root用户访问改为yesPasswordAuthentication yes //默认为no，改为yes开启密码登陆 修改完成后，再下按 esc 键，然后再输入:wq1:wq 重启服务器1reboot 方法二CentOS和Debian通用，输入以下两条命令12sed -i 's/PermitRootLogin no/PermitRootLogin yes/g' /etc/ssh/sshd_configsed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config Ubuntu系统，输入以下两条命令12sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/g' /etc/ssh/sshd_configsed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config 重启服务器1reboot 修改默认SSH端口修改/etc/ssh/sshd_config使用vi /etc/ssh/sshd_config编辑配置文件12#Port 22 //这行去掉#号，防止配置不好以后不能远程登录，还得去机房修改，等修改以后的端口能使用以后在注释掉Port 33378 //下面添加这一行 修改firewall配置(如果没有开启，则忽略)firewall添加想要修改的ssh端口：123456添加到防火墙：firewall-cmd --zone=public --add-port=33378/tcp --permanent (permanent是保存配置，不然下次重启以后这次修改无效)重启：firewall-cmd --reload查看添加端口是否成功，如果添加成功则会显示yes，否则nofirewall-cmd --zone=public --query-port=33378/tcp 修改SELinux使用命令semanage port -l | grep ssh查看当前SElinux 允许的ssh端口使用命令semanage port -a -t ssh_port_t -p tcp 33378添加33378端口到 SELinux使用命令semanage port -l | grep ssh确认是否添加成功如果成功会输出ssh_port_t tcp 33378, 22重启SSH服务systemctl restart sshd.service 测试新端口的ssh连接测试修改端口以后的ssh连接，如果成功则将step1里面的port 22 重新注释掉 本文转载自Vedio Talk - Linux","categories":[{"name":"教程","slug":"教程","permalink":"http://blog.zhangpeitian.cn/categories/教程/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://blog.zhangpeitian.cn/tags/Linux/"},{"name":"VPS","slug":"VPS","permalink":"http://blog.zhangpeitian.cn/tags/VPS/"}]},{"title":"基于VPS的 SSR && V2ray 搭建脚本","slug":"基于VPS的-SSR-V2ray-搭建过程","date":"2019-04-16T09:32:03.000Z","updated":"2019-04-17T06:14:51.605Z","comments":true,"path":"2019/04/16/基于VPS的-SSR-V2ray-搭建过程/","link":"","permalink":"http://blog.zhangpeitian.cn/2019/04/16/基于VPS的-SSR-V2ray-搭建过程/","excerpt":"本文主要记录了自己搭建出国留学工具的过程中所用到的linux脚本，共分为三部分： BBR加速 SSR V2ray","text":"本文主要记录了自己搭建出国留学工具的过程中所用到的linux脚本，共分为三部分： BBR加速 SSR V2ray BBR加速脚本一键安装 BBR 加速1wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; ./bbr.sh 验证Google BBR是否成功开启脚本1234sysctl net.ipv4.tcp_available_congestion_control --bbr cubic reno 或者 reno cubic bbrsysctl net.ipv4.tcp_congestion_control --bbrsysctl net.core.default_qdisc --fq/*以上输出值返回正确说明 Google BBR 拥塞控制算法已经安装成功，注意：并不是所有的 VPS 都会有此返回值，若没有也属正常。*/ SSRCentOS6/Debian6/Ubuntu14 ShadowsocksR一键部署管理脚本：12yum -y install wgetwget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh 输入脚本后根据提示输入数字安装即可，快捷管理的命令为：bash ssr.sh V2RayV2Ray一键安装脚本","categories":[],"tags":[{"name":"VPS","slug":"VPS","permalink":"http://blog.zhangpeitian.cn/tags/VPS/"}]},{"title":"Hexo个人博客：基础建站","slug":"Hexo个人博客：基础建站","date":"2019-04-12T09:36:15.000Z","updated":"2019-05-15T11:58:51.676Z","comments":true,"path":"2019/04/12/Hexo个人博客：基础建站/","link":"","permalink":"http://blog.zhangpeitian.cn/2019/04/12/Hexo个人博客：基础建站/","excerpt":"前言其实很久以前就有想法想要搭一个属于自己的博客，但是由于种种不可抗拒之力其实就是懒，最终才拖到现在才成功搭建起了自己的博客网站。","text":"前言其实很久以前就有想法想要搭一个属于自己的博客，但是由于种种不可抗拒之力其实就是懒，最终才拖到现在才成功搭建起了自己的博客网站。一开始选择了在vultr上购买了vps并安装了wordpress，但是wordpress实在是太过臃肿，相比而言hexo更加回归写作本身，所以最终我还是选择了hexo。一方面是由于hexo更纯粹，另一方面也是由于hexo的搭建需要借助github，借此正可以熟悉一下git的应用。博客不在美，而在于勤。望与诸君共勉。 遇到的问题 域名访问以后出现403错误 Hexo中使用外链形式添加的图片无法被加载 准备工作 Github账号一枚 VPS服务器 Git Node.js Xshell6 域名（需要实名备案） 搭建过程Git和Node.js的安装Git安装完成后执行git version命令查看版本信息，若显示则安装成功安装完成后执行一些初始化操作，打开Git Bash设置用户名和邮箱12git config --global user.name \"用户名\"git config --global user.email \"邮箱地址\" 设置SSH Key，Git Bash内执行：ssh-keygen -t rsa -C &quot;邮箱地址&quot;根据提示输入密码等完成设置。 查看公开密钥：cat ~/.ssh/id_rsa.pub复制显示的内容，待会有用。Node.js安装完成后执行node version命令查看版本信息，若显示则安装成功 本地Hexo博客搭建使用npm安装hexo1npm install -g hexo-cli 安装完成后在本地新建目录hexo(或任意名字自己决定)，例如D:\\Blog，在此根目录下执行12hexo initnpm install 执行完成后，可在根目录下执行hexo clean &amp;&amp; hexo g &amp;&amp; hexo s -p 4000 然在浏览器url中输入 http://localhost:4000 就可以看到你的个人博客了（端口如被占用可换成其他端口，如5000）。至此，本地Hexo博客搭建完成。 Git Hooks自动部署部署原理 通过在本地编辑文本，然后使用Git远程部署到VPS的Git仓库。hexo d命令实际上只deploy了本地的public文件夹，Git Hooks实际上就是当Git仓库收到最新的push时，将Git仓库接受到的内容复制到VPS上的网站目录内。相当于完成了手动将public文件夹复制到VPS的网站根目录里。 VPS操作 安装Git首先需要同本地一样安装Git，过程略。 创建Git用户执行：adduser git，根据提示设置密码。 赋予git用户sudo权限执行： 12chmod 740 /etc/sudoersvim /etc/sudoers 找到以下内容： 12# User privilege specificationroot ALL=(ALL:ALL) ALL 在root ALL=(ALL:ALL) ALL这一行下面添加git ALL=(ALL:ALL) ALLwq:保存退出后，修改回文件权限chmod 440 /etc/sudoers 初始化git仓库切换到git用户su git然后： 1234 cd /home/git //切换到git用户目录mkdir blog.git //创建git仓库文件夹，以blog.git为例cd blog.git //进入仓库目录git init --bare //使用--bare参数初始化为裸仓库，这样创建的仓库不包含工作区 创建网站目录 12cd /var/www/ //切换目录mkdir blog //创建网站目录，以blog为例 配置SSH 1234cd /home/git //切换到git用户目录mkdir .ssh //创建.ssh目录cd .sshvim authorized_keys 然后将本地的公钥复制到authorized_keys文件里(公钥即上文中本地执行cat ~/.ssh/id_rsa.pub查看的内容) 用户组管理执行： 12ll /home/git/ll /var/www/ 确保blog.git、.ssh、blog目录的用户组权限为git:git若不是，执行下列命令后再查看： 12sudo chown git:git -R /var/www/blogsudo chown git:git -R /home/git/blog.git 安装配置nginx 安装nginx执行：apt-get install nginx，若输入nginx -V可以看到nginx版本信息，则安装成功。 配置nginx执行： 123cd /etc/nginx/sites-available //切换目录cp default default.bak //备份默认配置vim default //修改配置 参靠我的本人配置文件内容： 1234567891011121314151617181920212223242526272829303132server &#123; listen 80 default; //默认监听80端口 root /var/www/blog; //网站根目录 server_name leihungjyu.com www.leihungjyu.com; //网址 access_log /var/log/nginx/blog_access.log; error_log /var/log/nginx/blog_error.log; error_page 404 = /404.html; location ~* ^.+\\.(ico|gif|jpg|jpeg|png)$ &#123; root /var/www/blog; access_log off; expires 1d; &#125; location ~* ^.+\\.(css|js|txt|xml|swf|wav)$ &#123; root /var/www/blog; access_log off; expires 10m; &#125; location / &#123; root /var/www/blog; if (-f $request_filename) &#123; rewrite ^/(.*)$ /$1 break; &#125; &#125; location /nginx_status &#123; stub_status on; access_log off; &#125;&#125; 保存退出后，启动nginx：systemctl start nginx设置开机自动启动：systemctl enable nginx查看运行状态：systemctl status nginx,显示running表示成功运行。 配置Git Hooks 创建post-receive文件git用户下执行： 12cd /home/git/blog.git/hooks //切换到hooks目录下vim post-receive //创建文件 复制下面的内容到post-receive文件中： 12345678#!/bin/bashGIT_REPO=/home/git/blog.gitTMP_GIT_CLONE=/tmp/blogPUBLIC_WWW=/var/www/blogrm -rf $&#123;TMP_GIT_CLONE&#125;git clone $GIT_REPO $TMP_GIT_CLONErm -rf $&#123;PUBLIC_WWW&#125;/*cp -rf $&#123;TMP_GIT_CLONE&#125;/* $&#123;PUBLIC_WWW&#125; 保存退出后，执行：chmod +x post-receive赋予可执行权限。 本地操作 尝试连接在本地打开Git Bash：ssh git@VPS的ip如图所示则连接成功，若默认端口不是22，则需要在后面加上-p 端口号，或者在.ssh文件夹下创建一个config文件，内容如下：12345 Host 服务器IPHostName 服务器IPUser gitPort 端口号IdentityFile ~/.ssh/id_rsa 配置Hexo打开本地博客根目录下的_config.yml文件，找到最后的deploy配置，修改为： 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: git@VPS的IP:blog.git branch: master 到此，Hexo建站就全部配置部署完毕了。","categories":[{"name":"教程","slug":"教程","permalink":"http://blog.zhangpeitian.cn/categories/教程/"}],"tags":[{"name":"搭建博客","slug":"搭建博客","permalink":"http://blog.zhangpeitian.cn/tags/搭建博客/"}]}]}